paths:
  /api/carts/{cid}:
    get:
      security:
        - cookieAuth: []
      summary: Obtiene un carrito
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          description: El id del carrito
          required: true
          schema:
            type: string
      responses:
        '200':
          description: El carrito fue obtenido satisfactoriamente de la base de datos se devuelve pagina renderizada con los valores del example.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/prodOfCart'
        '400':
          description: Error por parte del cliente. Probablemente por no estar logueado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: El estado de la respuesta
                    example: error
                  error:
                    example: "Debe iniciar sesión nuevamente"
        '500':
          description: Error interno del servidor. Usualmente generado por una query defectuosa o una falla con la conexión con la base de datos
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: El estado de la respuesta
                    example: error
                  error:
                    example: "Unhandled error"
    delete:
      summary: Elimina un carrito
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          description: El id del carrito
          required: true
          schema:
            type: string
      responses:
        '200':
          description: El carrito fue borrado satisfactoriamente de la base de datos
          content:
            application/json:
              schema:
                type: string
                example: Carrito eliminado
        '400':
          description: Error por parte del cliente. Probablemente por no estar logueado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: El estado de la respuesta
                    example: error
                  error:
                    example: "Debe iniciar sesión nuevamente"
        '500':
          description: Error interno del servidor. Usualmente generado por una query defectuosa o una falla con la conexión con la base de datos
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: El estado de la respuesta
                    example: error
                  error:
                    example: "Unhandled error"
  /api/carts/{cid}/purchase:
    post:
      summary: Crea un ticket de compra y lo envía por mail. Devuelve carrito vacío.
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          description: El id del carrito
          required: true
          schema:
            type: string
      responses:
        '200':
          description: El producto fue comprado satisfactoriamente en el carrito
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/emptyCart'
        '400':
          description: Error por parte del cliente. Probablemente por no estar logueado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: El estado de la respuesta
                    example: error
                  error:
                    example: "Debe iniciar sesión nuevamente"
        '500':
          description: Error interno del servidor. Usualmente generado por una query defectuosa o una falla con la conexión con la base de datos
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: El estado de la respuesta
                    example: error
                  error:
                    example: "Unhandled error"
  /api/carts/{cid}/products/{pid}:
    delete:
      summary: Elimina un producto del carrito y devuelve el carrito sin ese producto
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          description: El id del carrito
          required: true
          schema:
            type: string
        - name: pid
          in: path
          description: El id del producto
          required: true
          schema:
            type: string      
      responses:
        '200':
          description: El producto eliminado satisfactoriamente del carrito
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cart'
        '400':
          description: Error por parte del cliente. Probablemente por no estar logueado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: El estado de la respuesta
                    example: error
                  error:
                    example: "Debe iniciar sesión nuevamente"
        '500':
          description: Error interno del servidor. Usualmente generado por una query defectuosa o una falla con la conexión con la base de datos
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: El estado de la respuesta
                    example: error
                  error:
                    example: "Unhandled error"
    put:
      summary: Modifica un carrito, agregando un id de producto con una cantidad.
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          description: El id del carrito
          required: true
          schema:
            type: string
        - name: pid
          in: path
          description: El id del producto
          required: true
          schema:
            type: string    
      responses:
        '200':
          description: El producto fue agregado satisfactoriamente.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: El estado de la respuesta
                    value: success
                    example: success
                  payload:
                    $ref: '#/components/schemas/Cart'
        '400':
          description: Error por parte del cliente. Probablemente por no estar logueado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: El estado de la respuesta
                    example: error
                  error:
                    example: "Debe iniciar sesión nuevamente"
        '500':
          description: Error interno del servidor. Usualmente generado por una query defectuosa o una falla con la conexión con la base de datos
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: El estado de la respuesta
                    example: error
                  error:
                    example: "Unhandled error"
components:
  schemas:
    Cart:
      type: object
      properties:
        _id:
          type: string
        products:
          type: array
          items:
            type: object
            properties:
              product:
                $ref: '#/components/schemas/prodOfCart'
              quantity:
                type: integer
              _id:
                type: string
        __v:
          type: integer
          format: int32
    prodOfCart:
      type: object
      properties:
        id:
          type: string
        productName:
          type: string
        price:
          type: number
        stock:
          type: integer
        category:
          type: string
        code:
          type: string
        quantity:
          type: integer
        image:
          type: string
    emptyCart:
      type: object
      properties:
        _id:
          type: string
        products:
          type: array
          items: {}
        __v:
          type: integer
          format: int32
    ticket: 
      type: object
      properties:
        code:
          type: string
          description: código único de compra
          unique: true
          example: 93u4r2rjf
        purchase_datetime:
          type: string
          description: Fecha y hora de la compra
          example: 2023-06-25T20:17:46.159Z
        amount:
          type: number
          description: Monto total de la compra
          example: 90000
        purchaser:
          type: string
          description: Mail del comprador
          example: pepe@hotmail.com
  requestBodies:
    updatecart:
      type: object
      required:
        - quantity
      properties:
        quantity:
          type: number
          description: La cantidad de la compra
          example: '5'
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: 'AUTH'
  security:
    - cookieAuth: []  
